//PROBLEM STATEMENT
Given a N-sized triangle array input for each line such that i'th line contains i number of input integer/s.
Find the maximum sum of triangled matrix array going from top to bottom such that the next number is either just below it in the next row
or below plus one right in the next row. First input is the size of triangle,N, and for each next N-lines contains 
the corrresponding number of integers.

Constraints
0<N<=10^5
0<i<=N

Example
1.)Input
3
2
1 3
4 2 5
Output
10

2.)Input
4
1
1 2
4 1 2
2 3 1 1
Output 
9

Explanation
1.)Possible sums: 
(i)  2+1+4 = 7
(ii) 2+1+2 = 5
(iii)2+3+2 = 7
(iv) 2+3+5 = 10
Max Sum = 10

// SOLUTION
#include <iostream>
using namespace std;

int main() {
	int n, x, max=0;
	cin >> n;
	int sum[n], res[n];
	for(int i=0;i<n;++i){
		for(int j=0;j<=i;++j){
			cin >> x;
			if(i==0) sum[0]=x ;
			else if(j==0) sum[0]= x+res[0] ;
			else if(j==i) sum[j] = x+res[i-1];
			else{
				if(res[j-1] > res[j])	sum[j] = x+res[j-1];
				else sum[j] = x+res[j];
			}
		}
		for(int j=0;j<=i;++j){
			res[j] = sum[j];
		}
	}
	for(int i=0;i<n;++i){
		if(max < res[i]) max=res[i];
	}
	cout << max << endl;
	return 0;
}
